apply plugin: 'com.android.application'

apply plugin: 'checkstyle'
apply plugin: 'findbugs'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.bosoboso.yo.practicedesignpattern"
        minSdkVersion 26
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    checkstyle 'com.puppycrawl.tools:checkstyle:6.14.1'
}

def autoGenerated = ['**/R.class',
                     '**/R$*.class',
                     '**/Manifest*.*',
                     'android/**/*.*',
                     '**/BuildConfig.*',
                     '**/*$ViewBinder*.*',
                     '**/*$ViewInjector*.*',
                     '**/Dagger*.*',
                     '**/*_Provide*Factory.class.*',
                     '**/*_Deleter.class',
                     '**/*_Relation.class',
                     '**/*_Selector.class',
                     '**/*_Updater.class',
                     '**/*_Schema.class',
                     '**/*_Schema$*.class',
                     '**/OrmaDatabase.class',
                     '**/OrmaDatabase$Builder.class',
        ]

task("checkstyle", type: Checkstyle,
        dependsOn: "assemble") {
    group 'Reporting'
    description "Generate Checkstyle reports."

    ignoreFailures = true
    reports {
        xml.enabled = true
        html.enabled = true
    }

    showViolations true  // CheckStyle解析結果をStdOutに出力する
    configFile = rootProject.file('config/checkstyle-easy.xml')
    source = files(android.sourceSets.main.java.srcDirs)
    classpath = files(configurations.compile.files)
}

task("findbugs", type: FindBugs,
        dependsOn: "assemble") {
    group 'Reporting'
    description "Generate Findbugs reports."

    ignoreFailures = true
    reports {
        xml.enabled = true
        html.enabled = false // どちらかしか一度に出力できないのでJenkinsプラグイン用にXMLのみ
    }

    effort = 'max'
    reportLevel = 'low'
    source = files(android.sourceSets.main.java.srcDirs)
    classes = fileTree(dir: 'build/intermediates/classes/debug/',
            excludes: autoGenerated)
    classpath = files(configurations.compile.files)
    excludeFilter = rootProject.file('config/findbugs.xml')
}

check.dependsOn "checkstyle"
check.dependsOn "findbugs"